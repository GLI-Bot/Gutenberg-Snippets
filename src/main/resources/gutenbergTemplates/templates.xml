<templateSet group="Gutenberg Block Templates">
  <template
          name="gbie"
          value="
            import React from &quot;react&quot;;&#10;
            import { InspectorControls, useBlockProps } from '@wordpress/block-editor';&#10;
            import { PanelBody, PanelRow } from &quot;@wordpress/components&quot;;&#10;
            import {__} from &quot;@wordpress/i18n&quot;;&#10;
            &#10;
            interface Props {;&#10;
                attributes: {;&#10;
                &#10;
                };&#10;
                setAttributes: (attributes: Partial&lt;Props['attributes']&gt;) =&gt; void;&#10;
            };&#10;
            &#10;
            const Edit: React.FunctionComponent&lt;Props&gt; = (props) =&gt; {&#10;
                const { attributes, setAttributes } = props;&#10;
                const blockProps = useBlockProps({ className: &quot; &quot; });&#10;
                &#10;
                return (&#10;
                    &lt;&gt;&#10;
                        &lt;InspectorControls&gt;&#10;
                            &lt;PanelBody title={__(&quot; &quot;, 'text-domain')}&gt;&#10;
                                &lt;PanelRow&gt;&#10;
                                &lt;/PanelRow&gt;&#10;
                            &lt;/PanelBody&gt;&#10;
                        &lt;/InspectorControls&gt;&#10;
                        &lt;div {...blockProps}&gt;&#10;
                        &lt;/div&gt;&#10;
                    &lt;/&gt;&#10;
                );&#10;
            };&#10;
            &#10;
            export default Edit;&#10;"
          description="Generates a custom Gutenberg block component with inspector controls, WordPress block editor hooks, and i18n for localization."
          toReformat="true"
          toShortenFQNames="true"
  >
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template
          name="gbe"
          value="
            import React from &quot;react&quot;;&#10;
            import { useBlockProps } from '@wordpress/block-editor';&#10;
            &#10;
            interface Props {&#10;
                attributes: {&#10;
                &#10;
                };&#10;
                setAttributes: (attributes: Partial&lt;Props['attributes']&gt;) =&gt; void;&#10;
            }&#10;
            &#10;
            const Edit: React.FunctionComponent&lt;Props&gt; = (props) =&gt; {&#10;
                const { attributes, setAttributes } = props;&#10;
                const blockProps = useBlockProps({ className: &quot; &quot; });&#10;
                &#10;
                return (&#10;
                    &lt;div {...blockProps}&gt;&#10;
                    &lt;/div&gt;&#10;
                );&#10;
            };&#10;
            &#10;
            export default Edit;&#10;"
          description="Generates a custom Gutenberg block edit component."
          toReformat="true"
          toShortenFQNames="true"
  >
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>

  </template>
  <template
          name="gbi"
          value="
                import { registerBlockType } from '@wordpress/blocks';&#10;
                &#10;
                import metadata from &quot;./block.json&quot;;&#10;
                import Edit from &quot;./edit&quot;;&#10;
                import Save from &quot;./save&quot;;&#10;
                &#10;
                // @ts-expect-error: TS2769: No overload matches this call.&#10;
                registerBlockType(metadata, {&#10;
                    edit: Edit,&#10;
                    save: Save,&#10;
                });&#10;"
          description="Generates a custom Gutenberg block index component."
          toReformat="true"
          toShortenFQNames="true"
  >
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>


  <template
          name="gbs"
          value="
                import React from &quot;react&quot;;&#10;
                import { useBlockProps } from '@wordpress/block-editor';&#10;
                &#10;
                interface Props {&#10;
                    attributes: {&#10;
                &#10;
                    };&#10;
                }&#10;
                &#10;
                const Save: React.FunctionComponent&lt;Props&gt; = (props) =&gt; {&#10;
                    const { attributes } = props;&#10;
                    const blockProps = useBlockProps.save({ className: &quot; &quot; });&#10;
                    &#10;
                    return (&#10;
                        &lt;div {...blockProps}&gt;&#10;
                        &lt;/div&gt;&#10;
                    );&#10;
                };&#10;
                &#10;
                export default Save;&#10;"
          description="Generates a custom Gutenberg block save component."
          toReformat="true"
          toShortenFQNames="true"
  >
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>

    <template
          name="gbj"
          value="
                {
                  &quot;$schema&quot;: &quot;https://schemas.wp.org/trunk/block.json&quot;,&#10;
                  &quot;apiVersion&quot;: &quot;2&quot;,&#10;
                  &quot;name&quot;: &quot; &quot;,&#10;
                  &quot;version&quot;: &quot;0.1.0&quot;,&#10;
                  &quot;title&quot;: &quot; &quot;,&#10;
                  &quot;category&quot;: &quot;theme&quot;,&#10;
                  &quot;description&quot;: &quot; &quot;,&#10;
                  &quot;textdomain&quot;: &quot;theme-name&quot;,&#10;
                  &quot;editorScript&quot;: &quot;file:./index.js&quot;,&#10;
                  &quot;attributes&quot;: {&#10;
                  },&#10;
                  &quot;supports&quot;: {&#10;
                    &quot;html&quot;: true,&#10;
                    &quot;anchor&quot;: true,&#10;
                    &quot;align&quot;: true,&#10;
                    &quot;alignWide&quot;: true,&#10;
                    &quot;className&quot;: true&#10;
                  }&#10;
                }&#10;"
          description="Generates a custom Gutenberg block json file"
          toReformat="true"
          toShortenFQNames="true"
  >
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
    <context>
      <option name="JSON" value="true" />
    </context>
  </template>
</templateSet>
